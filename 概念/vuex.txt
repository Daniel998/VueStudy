Vuex：就是一个拆解版的Vue，把各个点，各个模块划分，然后按照自己的方式来串起一个流程



Vue Components：Vue组件。HTML页面上，负责接收用户操作等交互行为，执行dispatch方法触发对应action进行回应。(Vuex)

dispatch：操作行为触发方法，是唯一能执行action的方法。

actions：操作行为处理模块。负责处理Vue Components接收到的所有交互行为。包含同步/异步操作，支持多个同名方法，按照注册的顺序依次触发。向后台API请求的操作就在这个模块中进行，包括触发其他action以及提交mutation的操作。该模块提供了Promise的封装，以支持action的链式触发。

commit：状态改变提交操作方法。对mutation进行提交，是唯一能执行mutation的方法。

mutations：状态改变操作方法。是Vuex修改state的唯一推荐方法，其他修改方式在严格模式下将会报错。该方法只能进行同步操作，且方法名只能全局唯一。操作之中会有一些hook暴露出来，以进行state的监控等。

state：页面状态管理容器对象。集中存储Vue components中data对象的零散数据，全局唯一，以进行统一的状态管理。页面显示所需的数据从该对象中进行读取，利用Vue的细粒度数据响应机制来进行高效的状态更新。

getters：state对象读取方法。图中没有单独列出该模块，应该被包含在了render中，Vue Components通过该方法读取全局state对象。
Vue组件接收交互行为，调用dispatch方法触发action相关处理，若页面状态需要改变，则调用commit方法提交mutation修改state，通过getters获取到state新值，重新渲染Vue Components，界面随之更新。




a.js
export let num = 0;
export let name = "Think"

b.js
import {num,name} from a.js 

Vuex：解决了几个问题
1、解决了代码解耦
2、数据组件传递



通过Vue.use(vuex)时的操作：
先调用install，安装vuex，然后在安装之后调用初始化方法
这个初始化方法包含：在Vue的钩子函数beforeCreate中插入Vuex初始化代码
注入 $store对象


读源码：
读懂人家的代码
读懂人家的技巧
学会灵活运用人家的技巧